package jaminv.advancedmachines.util.models;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

import jaminv.advancedmachines.util.material.MaterialBase;

public class BlockstateMaker {
	private static final String tab1 = "        ";
	private static final String tab2 = "            ";
	private static final String tab3 = "                ";
	
	static public class Side {
		protected boolean top = false, bottom = false, left = false, right = false;
		protected boolean lock = false;
		public Side setTop(boolean set) { if (!lock) { top = set; } return this; }
		public Side setBottom(boolean set) { if (!lock) { bottom = set; } return this; }
		public Side setLeft(boolean set) { if (!lock) { left = set; } return this;}
		public Side setRight(boolean set) { if (!lock) { right = set; } return this; }
		
		public Side setAll(boolean set) {
			top = bottom = left = right = set;
			return this;
		}
		public Side reset() {
			return setAll(false);
		}
		public Side setAll() {
			return setAll(true);
		}
		
		public Side lock(boolean set) {
			lock = set;
			return this;
		}
		public Side lock() { return lock(true); }
		public Side unlock() { return lock(false); }
		
		public String toString() {
			if (!top && !bottom && !left && !right) { return "none"; }
			if (top && bottom && left && right) { return "all"; }
			
			boolean first = true;
			String ret = "";
			
			if (top) { ret += "top"; first = false; }
			if (bottom) {
				if (!first) { ret += "_"; }
				ret += "bottom"; first = false;
			}
			if (left) {
				if (!first) { ret += "_"; }
				ret += "left"; first = false;
			}
			if (right) {
				if (!first) { ret += "_"; }
				ret += "right";
			}
			return ret;
		}
	}
	static public class Block {
		public Side bottom = new Side();
		public Side east = new Side();
		public Side north = new Side();
		public Side south = new Side();
		public Side top = new Side();
		public Side west = new Side();
	}

	static public void make(String folder, String name, MaterialBase.MaterialType type) throws IOException {
		String start = "{\r\n" + 
			"    \"_autogenerated\": \"This file is automatically generated by BlockstateMaker.java. Do not modify directly.\",\r\n" +
			"    \"forge_marker\": 1,\r\n" + 
			"    \"defaults\": {\r\n" + 
			"        \"model\": \"advmach:" + name + "\"\r\n" + 
			"    },\r\n" + 
			"    \"variants\": {\r\n";
			
		String end = "    }\r\n}";
		
		File file = new File("..\\src\\main\\resources\\assets\\advmach\\blockstates\\" + name + ".json");
		file.createNewFile();
		FileWriter writer = new FileWriter(file, false);
		
		writer.write(start);
		
		boolean first = true;
		for (int bottom = 0; bottom <= 1; bottom++) {
			for (int east = 0; east <= 1; east++) {
				for (int north = 0; north <= 1; north++) {
					for (int south = 0; south <= 1; south++) {
						for (int top = 0; top <= 1; top++) {
							for (int west = 0; west <= 1; west++) {
								for (MaterialBase material : MaterialBase.values(type)) {
									makeEntry(writer, folder, name, bottom, east, north, south, top, west, material.getName(), first);
									first = false;
								}
							}
						}
					}
				}
			}
		}
		
		writer.write(end);
		writer.close();
	}
	
	static protected void makeEntry(FileWriter writer, String folder, String name, int bottom, int east, int north, int south, int top, int west, String variant, boolean first) throws IOException {
		writer.write(tab1 + (first ? "" : ",") + "\"");
		writer.write("border_bottom=" + (bottom == 0 ? "false" : "true") + ",");
		writer.write("border_east=" + (east == 0 ? "false" : "true") + ",");
		writer.write("border_north=" + (north == 0 ? "false" : "true") + ",");
		writer.write("border_south=" + (south == 0 ? "false" : "true") + ",");
		writer.write("border_top=" + (top == 0 ? "false" : "true") + ",");
		writer.write("border_west=" + (west == 0 ? "false" : "true") + ",");
		writer.write("variant=" + variant);
		writer.write("\": {\r\n");
		
		
		int count = bottom + east + north + south + top + west;
		int axes = (bottom == 1 || top == 1 ? 1 : 0) + (north == 1 || south == 1 ? 1 : 0) + (east == 1 || west == 1 ? 1 : 0);

		String model = "none";
		int x = 0, y = 0, z = 0;
		Block block = makeCorner(bottom, east, north, south, top, west);
		/*(count) {
		case 0:
		case 1:
			block = new Block();
			break;
		case 2:
			if (axes == 1) {
				// If faces are on the same axis, then the cuboid is only 1 block wide/tall/deep, and this block is in the middle
				block = new Block();
			} else {
				block = makeCorner(bottom, east, north, south, top, west);
			}
			block = new Block();
			break;
		case 3:
			if (axes == 3) {
				block = makeCorner(bottom, east, north, south, top, west);
			} else {
				block = new Block();
			}
			break;
		case 4:
			block = new Block();
			break;
		case 5:
			block = new Block();
			break;
		case 6:
		default:
			block = new Block();
			block.bottom.setAll();
			block.top.setAll();
			block.north.setAll();
			block.south.setAll();
			block.east.setAll();
			block.west.setAll();
			break;
		} */
		
		writer.write(tab2 + "\"model\": \"advmach:machine_expansion\",\r\n");
		String texture_dir = "advmach:blocks/" + folder.replace("\\", "/") + "/" + variant + "/";
		//writer.write(tab2 + "\"model\": \"advmach:" + folder.replace("\\", "/") + "/" + variant + "/" + name + "_" + variant + "_" + model + "\"\r\n");
		writer.write(tab2 + "\"textures\": {\r\n");
		writer.write(tab3 + "\"down\": \"" + texture_dir + block.bottom.toString() + "\",\r\n");
		writer.write(tab3 + "\"east\": \"" + texture_dir + block.east.toString() + "\",\r\n");
		writer.write(tab3 + "\"north\": \"" + texture_dir + block.north.toString() + "\",\r\n");
		writer.write(tab3 + "\"south\": \"" + texture_dir + block.south.toString() + "\",\r\n");
		writer.write(tab3 + "\"up\": \"" + texture_dir + block.top.toString() + "\",\r\n");
		writer.write(tab3 + "\"west\": \"" + texture_dir + block.west.toString() + "\",\r\n");
		writer.write(tab3 + "\"particle\": \"" + texture_dir + "all\"\r\n");
		writer.write(tab2 + "}\r\n");
		
/*		if (x != 0) {
			writer.write(tab2 + ",\"x\": " + x + "\r\n");
		}
		if (y != 0) {
			writer.write(tab2 + ",\"y\": " + y + "\r\n");
		}
		if (z != 0) {
			writer.write(tab2 + ",\"z\": " + z + "\r\n");
		} */
		writer.write(tab1 + "}\r\n");
	}
	
/*	protected static Block makeEdge(int bottom, int east, int north, int south, int top, int west) {
		Block bl = new Block();
		
	} */
	
	protected static Block makeCorner(int bottom, int east, int north, int south, int top, int west) {
		Block bl = new Block();
		if (top == 1) {
			bl.north.setTop(true); bl.south.setTop(true);
			bl.west.setTop(true); bl.east.setTop(true);
			//bl.bottom.lock();
		} 
		if (bottom == 1) {
			bl.north.setBottom(true); bl.south.setBottom(true);
			bl.west.setBottom(true); bl.east.setBottom(true);
			//bl.top.lock();
		}
		
		if (east == 1) {
			//bl.west.reset().lock();
			bl.north.setLeft(true); bl.south.setRight(true);
			bl.top.setRight(true); bl.bottom.setRight(true);
		}
		if (west == 1) {
			//bl.east.reset().lock();
			bl.north.setRight(true); bl.south.setLeft(true);
			bl.top.setLeft(true); bl.bottom.setLeft(true);
		}
		
		if (north == 1) {
			//bl.south.reset().lock();
			bl.east.setRight(true); bl.west.setLeft(true);
			bl.top.setTop(true); bl.bottom.setBottom(true);
		}
		if (south == 1) {
			//bl.north.reset().lock();
			bl.east.setLeft(true); bl.west.setRight(true);
			bl.top.setBottom(true); bl.bottom.setTop(true);
		}
		return bl;
	}
}
